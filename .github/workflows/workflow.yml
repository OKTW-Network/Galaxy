name: Galaxy Actions
on: [ push, pull_request, workflow_dispatch ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Validation
        uses: gradle/wrapper-validation-action@v1

      - name: JDK
        uses: actions/setup-java@v1
        with:
          java-version: '16'

      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle/loom-cache
          key: caches-${{ hashFiles('build.gradle.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            caches-

      - name: Build
        run: ./gradlew --no-daemon build

      - name: Upload-Artifact
        uses: actions/upload-artifact@master
        with:
          name: jar
          path: build/libs/Galaxy.jar

  Docker-image:
    needs: Build
    runs-on: ubuntu-latest
    env:
      REGISTRY_IMAGE: harbor.k8s.oktw.one/galaxy/galaxy
      USERNAME: ${{ secrets.OKTW_HARBOR_USERNAME }}
      PASSWORD: ${{ secrets.OKTW_HARBOR_PASSWORD }}
    steps:
      - name: Env
        shell: bash
        run: echo IMAGE_TAG=$([ "$GITHUB_REF" = "refs/heads/master" ] && echo "latest" || [ "$GITHUB_EVENT_NAME" = 'pull_request' ] && echo pr-${{github.event.pull_request.number}} || echo ${GITHUB_REF##*/}) >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - uses: actions/download-artifact@v1
        with:
          name: jar
          path: docker/mods/Galaxy.jar
      - name: login
        if: env.USERNAME != '' && env.PASSWORD != ''
        uses: azure/docker-login@v1
        with:
          login-server: harbor.k8s.oktw.one
          username: ${{ secrets.OKTW_HARBOR_USERNAME }}
          password: ${{ secrets.OKTW_HARBOR_PASSWORD }}
      - name: pull cache
        run: |
          docker pull $REGISTRY_IMAGE:build-cache || true
          docker pull $REGISTRY_IMAGE:latest || true
      - name: build cache
        if: github.ref == 'refs/heads/master'
        working-directory: ./docker
        run: |
          docker build --pull --cache-from $REGISTRY_IMAGE:build-cache -t $REGISTRY_IMAGE:build-cache --target builder .
          docker push $REGISTRY_IMAGE:build-cache
      - name: build
        working-directory: ./docker
        run: docker build --cache-from $REGISTRY_IMAGE:build-cache --cache-from $REGISTRY_IMAGE:latest -t $REGISTRY_IMAGE:$IMAGE_TAG .
      - name: push
        if: env.USERNAME != '' && env.PASSWORD != ''
        run: docker push $REGISTRY_IMAGE:$IMAGE_TAG
